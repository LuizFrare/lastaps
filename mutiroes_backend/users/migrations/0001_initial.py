# Generated by Django 4.2.7 on 2025-10-04 23:39

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('events', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserBadge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('description', models.TextField(verbose_name='Descrição')),
                ('icon', models.CharField(max_length=50, verbose_name='Ícone')),
                ('color', models.CharField(default='#FFD700', max_length=7, verbose_name='Cor')),
                ('badge_type', models.CharField(choices=[('participation', 'Participação'), ('organization', 'Organização'), ('achievement', 'Conquista'), ('special', 'Especial')], max_length=20, verbose_name='Tipo de Badge')),
                ('min_events', models.PositiveIntegerField(default=0, verbose_name='Mínimo de Eventos')),
                ('min_hours', models.PositiveIntegerField(default=0, verbose_name='Mínimo de Horas')),
                ('special_condition', models.TextField(blank=True, verbose_name='Condição Especial')),
            ],
            options={
                'verbose_name': 'Badge',
                'verbose_name_plural': 'Badges',
                'ordering': ['badge_type', 'min_events'],
            },
        ),
        migrations.CreateModel(
            name='UserSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('category', models.CharField(choices=[('environmental', 'Ambiental'), ('technical', 'Técnica'), ('leadership', 'Liderança'), ('communication', 'Comunicação'), ('other', 'Outra')], max_length=20, verbose_name='Categoria')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Habilidade',
                'verbose_name_plural': 'Habilidades',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message='Formato de telefone inválido', regex='^\\+?1?\\d{9,15}$')], verbose_name='Telefone')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('bio', models.TextField(blank=True, max_length=500, verbose_name='Biografia')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='users/avatars/', verbose_name='Avatar')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='Cidade')),
                ('state', models.CharField(blank=True, max_length=2, verbose_name='Estado')),
                ('zip_code', models.CharField(blank=True, max_length=10, verbose_name='CEP')),
                ('notification_preferences', models.JSONField(default=dict, verbose_name='Preferências de Notificação')),
                ('is_public_profile', models.BooleanField(default=True, verbose_name='Perfil Público')),
                ('show_participation_history', models.BooleanField(default=True, verbose_name='Mostrar Histórico de Participação')),
                ('total_events_participated', models.PositiveIntegerField(default=0, verbose_name='Total de Eventos Participados')),
                ('total_hours_volunteered', models.PositiveIntegerField(default=0, verbose_name='Total de Horas Voluntariadas')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('interests', models.ManyToManyField(blank=True, related_name='interested_users', to='events.eventcategory', verbose_name='Interesses')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Perfil do Usuário',
                'verbose_name_plural': 'Perfis dos Usuários',
            },
        ),
        migrations.CreateModel(
            name='UserNotificationSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_new_events', models.BooleanField(default=True, verbose_name='Email - Novos Eventos')),
                ('email_event_reminders', models.BooleanField(default=True, verbose_name='Email - Lembretes de Eventos')),
                ('email_event_updates', models.BooleanField(default=True, verbose_name='Email - Atualizações de Eventos')),
                ('email_badge_earned', models.BooleanField(default=True, verbose_name='Email - Badges Conquistados')),
                ('push_new_events', models.BooleanField(default=True, verbose_name='Push - Novos Eventos')),
                ('push_event_reminders', models.BooleanField(default=True, verbose_name='Push - Lembretes de Eventos')),
                ('push_event_updates', models.BooleanField(default=True, verbose_name='Push - Atualizações de Eventos')),
                ('push_badge_earned', models.BooleanField(default=True, verbose_name='Push - Badges Conquistados')),
                ('reminder_frequency', models.CharField(choices=[('immediate', 'Imediato'), ('daily', 'Diário'), ('weekly', 'Semanal'), ('never', 'Nunca')], default='daily', max_length=20, verbose_name='Frequência de Lembretes')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_settings', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Configuração de Notificação',
                'verbose_name_plural': 'Configurações de Notificação',
            },
        ),
        migrations.CreateModel(
            name='UserSkillLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('beginner', 'Iniciante'), ('intermediate', 'Intermediário'), ('advanced', 'Avançado'), ('expert', 'Especialista')], max_length=20, verbose_name='Nível')),
                ('years_experience', models.PositiveIntegerField(default=0, verbose_name='Anos de Experiência')),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.userskill', verbose_name='Habilidade')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Nível de Habilidade',
                'verbose_name_plural': 'Níveis de Habilidades',
                'ordering': ['skill__category', 'skill__name'],
                'unique_together': {('user', 'skill')},
            },
        ),
        migrations.CreateModel(
            name='UserBadgeEarned',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('earned_at', models.DateTimeField(auto_now_add=True, verbose_name='Conquistado em')),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.userbadge', verbose_name='Badge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='earned_badges', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Badge Conquistado',
                'verbose_name_plural': 'Badges Conquistados',
                'ordering': ['-earned_at'],
                'unique_together': {('user', 'badge')},
            },
        ),
        migrations.CreateModel(
            name='UserAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(choices=[('monday', 'Segunda-feira'), ('tuesday', 'Terça-feira'), ('wednesday', 'Quarta-feira'), ('thursday', 'Quinta-feira'), ('friday', 'Sexta-feira'), ('saturday', 'Sábado'), ('sunday', 'Domingo')], max_length=10, verbose_name='Dia da Semana')),
                ('start_time', models.TimeField(verbose_name='Horário de Início')),
                ('end_time', models.TimeField(verbose_name='Horário de Término')),
                ('is_available', models.BooleanField(default=True, verbose_name='Disponível')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Disponibilidade do Usuário',
                'verbose_name_plural': 'Disponibilidades dos Usuários',
                'ordering': ['day_of_week', 'start_time'],
                'unique_together': {('user', 'day_of_week', 'start_time')},
            },
        ),
    ]
