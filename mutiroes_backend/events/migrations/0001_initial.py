# Generated by Django 4.2.7 on 2025-10-04 23:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('description', models.TextField(verbose_name='Descrição')),
                ('address', models.CharField(max_length=300, verbose_name='Endereço')),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9, verbose_name='Latitude')),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9, verbose_name='Longitude')),
                ('city', models.CharField(max_length=100, verbose_name='Cidade')),
                ('state', models.CharField(max_length=2, verbose_name='Estado')),
                ('start_date', models.DateTimeField(verbose_name='Data de Início')),
                ('end_date', models.DateTimeField(verbose_name='Data de Término')),
                ('registration_deadline', models.DateTimeField(verbose_name='Prazo de Inscrição')),
                ('max_participants', models.PositiveIntegerField(verbose_name='Máximo de Participantes')),
                ('min_age', models.PositiveIntegerField(default=16, verbose_name='Idade Mínima')),
                ('max_age', models.PositiveIntegerField(blank=True, null=True, verbose_name='Idade Máxima')),
                ('status', models.CharField(choices=[('draft', 'Rascunho'), ('published', 'Publicado'), ('cancelled', 'Cancelado'), ('completed', 'Concluído')], default='draft', max_length=20, verbose_name='Status')),
                ('is_public', models.BooleanField(default=True, verbose_name='Público')),
                ('requires_approval', models.BooleanField(default=False, verbose_name='Requer Aprovação')),
                ('required_tools', models.TextField(blank=True, verbose_name='Ferramentas Necessárias')),
                ('provided_tools', models.TextField(blank=True, verbose_name='Ferramentas Fornecidas')),
                ('what_to_bring', models.TextField(blank=True, verbose_name='O que Trazer')),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='events/covers/', verbose_name='Imagem de Capa')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
            ],
            options={
                'verbose_name': 'Evento',
                'verbose_name_plural': 'Eventos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EventCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='Ícone')),
                ('color', models.CharField(default='#007AFF', max_length=7, verbose_name='Cor')),
            ],
            options={
                'verbose_name': 'Categoria de Evento',
                'verbose_name_plural': 'Categorias de Eventos',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='EventResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('resource_type', models.CharField(choices=[('tool', 'Ferramenta'), ('material', 'Material'), ('equipment', 'Equipamento'), ('other', 'Outro')], max_length=20, verbose_name='Tipo de Recurso')),
                ('quantity_needed', models.PositiveIntegerField(verbose_name='Quantidade Necessária')),
                ('quantity_provided', models.PositiveIntegerField(default=0, verbose_name='Quantidade Fornecida')),
                ('unit', models.CharField(default='unidade', max_length=20, verbose_name='Unidade')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='events.event', verbose_name='Evento')),
            ],
            options={
                'verbose_name': 'Recurso do Evento',
                'verbose_name_plural': 'Recursos dos Eventos',
                'ordering': ['resource_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='EventPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='events/photos/', verbose_name='Foto')),
                ('caption', models.CharField(blank=True, max_length=200, verbose_name='Legenda')),
                ('is_before', models.BooleanField(default=False, verbose_name='Foto Antes')),
                ('is_after', models.BooleanField(default=False, verbose_name='Foto Depois')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='events.event', verbose_name='Evento')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Foto do Evento',
                'verbose_name_plural': 'Fotos dos Eventos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EventComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Conteúdo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='events.event', verbose_name='Evento')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='events.eventcomment', verbose_name='Comentário Pai')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Comentário do Evento',
                'verbose_name_plural': 'Comentários dos Eventos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='event',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.eventcategory', verbose_name='Categoria'),
        ),
        migrations.AddField(
            model_name='event',
            name='organizer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organized_events', to=settings.AUTH_USER_MODEL, verbose_name='Organizador'),
        ),
        migrations.CreateModel(
            name='EventParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('confirmed', 'Confirmado'), ('cancelled', 'Cancelado'), ('rejected', 'Rejeitado')], default='pending', max_length=20, verbose_name='Status')),
                ('emergency_contact', models.CharField(blank=True, max_length=100, verbose_name='Contato de Emergência')),
                ('emergency_phone', models.CharField(blank=True, max_length=20, verbose_name='Telefone de Emergência')),
                ('special_needs', models.TextField(blank=True, verbose_name='Necessidades Especiais')),
                ('experience_level', models.CharField(choices=[('beginner', 'Iniciante'), ('intermediate', 'Intermediário'), ('advanced', 'Avançado')], default='beginner', max_length=20, verbose_name='Nível de Experiência')),
                ('checked_in', models.BooleanField(default=False, verbose_name='Check-in Realizado')),
                ('check_in_time', models.DateTimeField(blank=True, null=True, verbose_name='Horário do Check-in')),
                ('registered_at', models.DateTimeField(auto_now_add=True, verbose_name='Inscrito em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='events.event', verbose_name='Evento')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_participations', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Participante do Evento',
                'verbose_name_plural': 'Participantes dos Eventos',
                'ordering': ['-registered_at'],
                'unique_together': {('event', 'user')},
            },
        ),
    ]
